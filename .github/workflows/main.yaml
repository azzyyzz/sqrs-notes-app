name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install poetry
      run: |
        pip install poetry
    
    - name: Install dependencies
      run: |
        cd backend
        poetry install
    
    - name: Run flake8
      run: |
        cd backend
        poetry run flake8 app/ --count --show-source --statistics
    
    - name: Run bandit
      run: |
        cd backend
        poetry run bandit -r app/ -ll
    
    - name: Run pytest with coverage
      env:
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }}
        JWT_EXPIRE_MINUTES: ${{ secrets.JWT_EXPIRE_MINUTES }}
        API_BASE_URL: ${{ secrets.TEST_API_BASE_URL }}
        DEEP_TRANSLATE_API_KEY: ${{ secrets.DEEP_TRANSLATE_API_KEY }}
      run: |
        cd backend
        poetry run pytest tests/ -v --cov=app --cov-report=xml
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage.xml
        flags: backend
        name: backend-coverage

  frontend:
    name: Frontend Tests
    needs: backend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install poetry
      run: |
        pip install poetry
    
    - name: Install dependencies
      run: |
        cd frontend
        poetry install
    
    - name: Run flake8
      run: |
        cd frontend
        poetry run flake8 app.py --count --show-source --statistics
    
    - name: Run bandit
      run: |
        cd app/frontend
        poetry run bandit -r app/ -ll
    
    - name: Run pytest with coverage
      env:
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        SECRET_KEY: ${{ secrets.TEST_SECRET_KEY }}
        JWT_EXPIRE_MINUTES: ${{ secrets.JWT_EXPIRE_MINUTES }}
        API_BASE_URL: ${{ secrets.TEST_API_BASE_URL }}
        DEEP_TRANSLATE_API_KEY: ${{ secrets.DEEP_TRANSLATE_API_KEY }}
      run: |
        cd frontend
        poetry run pytest tests/ -v --cov=app --cov-report=xml
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: app/frontend/coverage.xml
        flags: frontend
        name: frontend-coverage